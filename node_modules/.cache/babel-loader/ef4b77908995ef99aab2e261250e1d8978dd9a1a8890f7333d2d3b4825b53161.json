{"ast":null,"code":"// import { createStore } from 'redux';\nimport{configureStore}from'@reduxjs/toolkit';import counterReducer from'./counter';import authReducer from'./auth';// const initialCounterState = { counter: 0, showCounter: true }\n// const counterSlice = createSlice({\n//     name: 'counter',\n//     initialState: initialCounterState,\n//     reducers: {\n//         increment(state) {\n//             state.counter++;\n//         },\n//         decrement(state) {\n//             state.counter--;\n//         },\n//         increase(state, action) {\n//             state.counter = state.counter + action.payload;\n//         },\n//         toggleCounter(state) {\n//             state.showCounter = !state.showCounter;\n//         }\n//     }\n// });\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         };\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// };\nvar store=configureStore({reducer:{counter:counterReducer,auth:authReducer}});// export const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"sources":["C:/React/Redux-counter/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from './counter';\r\nimport authReducer from './auth';\r\n\r\n// const initialCounterState = { counter: 0, showCounter: true }\r\n\r\n// const counterSlice = createSlice({\r\n//     name: 'counter',\r\n//     initialState: initialCounterState,\r\n//     reducers: {\r\n//         increment(state) {\r\n//             state.counter++;\r\n//         },\r\n//         decrement(state) {\r\n//             state.counter--;\r\n//         },\r\n//         increase(state, action) {\r\n//             state.counter = state.counter + action.payload;\r\n//         },\r\n//         toggleCounter(state) {\r\n//             state.showCounter = !state.showCounter;\r\n//         }\r\n//     }\r\n// });\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             showCounter: !state.showCounter,\r\n//             counter: state.counter\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterReducer , auth: authReducer}\r\n});\r\n\r\n// export const counterActions = counterSlice.actions;\r\n\r\nexport default store;"],"mappings":"AAAA;AAEA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAOC,eAAc,KAAM,WAAW,CACtC,MAAOC,YAAW,KAAM,QAAQ,CAEhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,GAAMC,MAAK,CAAGH,cAAc,CAAC,CACzBI,OAAO,CAAE,CAAEC,OAAO,CAAEJ,cAAc,CAAGK,IAAI,CAAEJ,WAAW,CAC1D,CAAC,CAAC,CAEF;AAEA,cAAeC,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}